//------------------------------------------------
//--- 010 Editor v9.0.2 Script File
//
//      File: RE_RSZ_ChangeValues.1sc
//   Authors: alphaZomega
//   Version: 0.2
//   Purpose: Script to modify input RE Engine RSZ variables within a range
//  Category: RE Engine
//   History: June 6 2021
//------------------------------------------------
local int lv, r, v, a, g;
local int multiply, divide, add, random;

string fieldToChange = InputString("Input field name to find", "Input the Name of the field you want to change", "");
if (fieldToChange == "")
    return;
if (GetSelSize() && GetSelSize() > 64)
    Printf("Will change %s variables within range: [%u to %u]\n\n", fieldToChange, GetSelStart(), GetSelStart() + GetSelSize());
string instanceToChange = Lower(InputString("Input instance name to find", "Or leave blank to change all instances with that field", ""));

string msg; SPrintf(msg, "Or leave blank to change all %s values", fieldToChange);
string searchValue = InputString("Input old value to find", msg, "");

wstring changeValue = InputString("Input New Value", "Example:\n5 = Change to 5\n*1 = Multiply by 1\n\\2 = Divide by 2\n+1.4 = Add 1.4\n+-3 = Subtract 3", "*1");
Printf("ChangeValue: %s\n", changeValue);
if (changeValue[0] == 42)
    multiply = TRUE;
else if (changeValue[0] == 47)
    divide = TRUE;
else if (changeValue[0] == 126)
    add = TRUE;
else if (changeValue[0] == 0x7E) //~
    random = TRUE;
if (multiply || add || divide || random)  {
    changeValue = SubStr(changeValue, 1, sizeof(changeValue)-1);
}

string MakeMultiValue(RSZVariable &r, string oldStr, string newStr) {
    float values[4];
    string result = newStr;
    if (find((wstring)newStr, " ") != -1)  {
        SScanf( newStr, "%g %g %g %g", values[0], values[1], values[2], values[3] );
        for (g=0; g<4; g++) {
            if (exists(r.data[g]))
                if (multiply) 
                    values[g] *= r.data[g];
                else if (divide && value != 0)
                    values[g] = r.data[g] / values[g];
                else if (add && value != 0)
                    values[g] = r.data[g] + values[g];
        }
        SPrintf(result, "%g %g %g %g", values[0], values[1], values[2], values[3]);
    }
    return result;
}

void ChangeValue(RSZVariable &r) 
{
    local string oldValue, newValue;
    if (exists(r.ObjectIndex)) {
        Printf("Changing %s value at %u to %s \n", fieldToChange, startof(r.Alignment.varStart), changeValue);
        r.ObjectIndex = Atoi(changeValue);
    } else if (searchValue == "" || ReadRSZVariable(r) == searchValue) {
        oldValue = ReadRSZVariable(r);
        if (oldValue[0] == 91) {
            newValue = changeValue;
        } else if (multiply) {
            SPrintf(newValue, "%g", Atof(oldValue) * Atof(changeValue));
        } else if (divide) {
            if (Atof(oldValue) == 0) 
                { v++; continue; }
            SPrintf(newValue, "%g", Atof(oldValue) / Atof(changeValue));
        } else if (add) {
            SPrintf(newValue, "%g", Atof(oldValue) + Atof(changeValue));
        } else if (random) {
            SPrintf(newValue, "%g", Random(Atof(changeValue)));
        } else {
            newValue = changeValue;
        }
        newValue = MakeMultiValue(r, oldValue, newValue);
        Printf("Changing %s value at %u from %s to %s \n", fieldToChange, startof(r.Alignment.varStart), oldValue, newValue);
        WriteRSZVariable(r, (wstring)newValue);
    }
}


//start
for (lv=0; lv<level; lv++) {
    r = 0;
    while (exists(RSZFile[lv].Data.RawData.RSZ[r])) {
        v = 0; 
        while (exists(RSZFile[lv].Data.RawData.RSZ[r].var[v])) {
            if ( (GetSelSize() < 64 || (startof(RSZFile[lv].Data.RawData.RSZ[r].var[v]) >= GetSelStart() && startof(RSZFile[lv].Data.RawData.RSZ[r].var[v]) + sizeof(RSZFile[lv].Data.RawData.RSZ[r].var[v]) <= GetSelStart() + GetSelSize()))
            && RSZFile[lv].Data.RawData.RSZ[r].var[v].fieldName == fieldToChange && (instanceToChange == "" || instanceToChange == Lower((wstring)RSZFile[lv].Data.RawData.RSZ[r].name)) ) {
                a = 0;
                if (!exists(RSZFile[lv].Data.RawData.RSZ[r].var[v].Count)) {
                    ChangeValue(RSZFile[lv].Data.RawData.RSZ[r].var[v]);
                } else while (exists(RSZFile[lv].Data.RawData.RSZ[r].var[v].var[a])) {
                    ChangeValue(RSZFile[lv].Data.RawData.RSZ[r].var[v].var[a]);
                    a++;
                }
            }
            v++; 
        }
        r++;
    }
    if (GetSelSize() && startof(RSZFile[lv]) > GetSelStart())
        break;
}